{
  "address": "0xb0AD00B383242aB8faFE9177f58EA6e221Ff1430",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa445a2a30dba5acd75272ae733343770baebc5d9155fbb46a3b181aed769de07",
  "receipt": {
    "to": null,
    "from": "0x1657D97e81c59C3ac5a6d2B4617E2a1c386cf0A1",
    "contractAddress": "0xb0AD00B383242aB8faFE9177f58EA6e221Ff1430",
    "transactionIndex": 17,
    "gasUsed": "991732",
    "logsBloom": "0x
    "blockHash": "0x4003837c78de463d7ba3a3a5deea32c61d140a99a9c68f6a45912f6b56514793",
    "transactionHash": "0xa445a2a30dba5acd75272ae733343770baebc5d9155fbb46a3b181aed769de07",
    "logs": [],
    "blockNumber": 3548694,
    "cumulativeGasUsed": "4109545",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "e2e8c3f708a9f22db2fe1c2199ae911d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n/**\\r\\n * @title \\r\\n * @author \\r\\n * @notice \\r\\n */\\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n    address[] private s_funders;\\r\\n\\r\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\r\\n    address private immutable i_owner;\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        // require(msg.sender == owner);\\r\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n    \\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n    }\\r\\n    \\r\\n    function withdraw() public onlyOwner {\\r\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\r\\n            address funder = s_funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        // // transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // // send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // call\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public payable onlyOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n\\r\\n        for (uint256 i = 0; i < funders.length; i++){\\r\\n            address funder = funders[i];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns(address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n    \\r\\n    function getFunder(uint256 index) public view returns(address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(address _address) public view returns(uint256) {\\r\\n        return s_addressToAmountFunded[_address];\\r\\n    }\\r\\n    \\r\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe4215ad782c85799a79688546756d4968e73531cc5c3958838c02fdc7565038c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        // Sepolia ETH / USD Address\\r\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        // );\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xeb6367058b056abf5a68c7bbaefc1885535ad5bc2d0a9980fcb0054f13946f4c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012093803806200120983398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161109062000179600039600081816103420152818161059101526105e101526110906000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa2565b6102f8565b6040516100cc9190610ae8565b60405180910390f35b3480156100e157600080fd5b506100ea610340565b005b3480156100f857600080fd5b50610101610580565b60405161010e9190610ae8565b60405180910390f35b34801561012357600080fd5b5061012c61058d565b6040516101399190610b12565b60405180910390f35b34801561014e57600080fd5b506101576105b5565b6040516101649190610b8c565b60405180910390f35b6101756101be565b005b61017f6105df565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bd3565b610883565b6040516101b59190610b12565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cb90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c5d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610cac565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610470576000600182815481106103eb576103ea610ce0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046890610d0f565b9150506103c8565b50600067ffffffffffffffff81111561048c5761048b610d57565b5b6040519080825280602002602001820160405280156104ba5781602001602082028036833780820191505090505b50600190805190602001906104d0929190610998565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f790610db7565b60006040518083038185875af1925050503d8060008114610534576040519150601f19603f3d011682016040523d82523d6000602084013e610539565b606091505b505090508061057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490610e18565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610664576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069e575b5050505050905060005b81518110156107725760008282815181106107105761070f610ce0565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076a90610d0f565b9150506106f2565b50600067ffffffffffffffff81111561078e5761078d610d57565b5b6040519080825280602002602001820160405280156107bc5781602001602082028036833780820191505090505b50600190805190602001906107d2929190610998565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f990610db7565b60006040518083038185875af1925050503d8060008114610836576040519150601f19603f3d011682016040523d82523d6000602084013e61083b565b606091505b505090508061087f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087690610e18565b60405180910390fd5b5050565b60006001828154811061089957610898610ce0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d783610907565b90506000670de0b6b3a764000085836108f09190610e38565b6108fa9190610ea9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109799190610f67565b5050509150506402540be400816109909190610fe2565b915050919050565b828054828255906000526020600020908101928215610a11579160200282015b82811115610a105782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b8565b5b509050610a1e9190610a22565b5090565b5b80821115610a3b576000816000905550600101610a23565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6f82610a44565b9050919050565b610a7f81610a64565b8114610a8a57600080fd5b50565b600081359050610a9c81610a76565b92915050565b600060208284031215610ab857610ab7610a3f565b5b6000610ac684828501610a8d565b91505092915050565b6000819050919050565b610ae281610acf565b82525050565b6000602082019050610afd6000830184610ad9565b92915050565b610b0c81610a64565b82525050565b6000602082019050610b276000830184610b03565b92915050565b6000819050919050565b6000610b52610b4d610b4884610a44565b610b2d565b610a44565b9050919050565b6000610b6482610b37565b9050919050565b6000610b7682610b59565b9050919050565b610b8681610b6b565b82525050565b6000602082019050610ba16000830184610b7d565b92915050565b610bb081610acf565b8114610bbb57600080fd5b50565b600081359050610bcd81610ba7565b92915050565b600060208284031215610be957610be8610a3f565b5b6000610bf784828501610bbe565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c47601b83610c00565b9150610c5282610c11565b602082019050919050565b60006020820190508181036000830152610c7681610c3a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb782610acf565b9150610cc283610acf565b9250828201905080821115610cda57610cd9610c7d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d1a82610acf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d4c57610d4b610c7d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da1600083610d86565b9150610dac82610d91565b600082019050919050565b6000610dc282610d94565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e02600b83610c00565b9150610e0d82610dcc565b602082019050919050565b60006020820190508181036000830152610e3181610df5565b9050919050565b6000610e4382610acf565b9150610e4e83610acf565b9250828202610e5c81610acf565b91508282048414831517610e7357610e72610c7d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb482610acf565b9150610ebf83610acf565b925082610ecf57610ece610e7a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ef981610eda565b8114610f0457600080fd5b50565b600081519050610f1681610ef0565b92915050565b6000819050919050565b610f2f81610f1c565b8114610f3a57600080fd5b50565b600081519050610f4c81610f26565b92915050565b600081519050610f6181610ba7565b92915050565b600080600080600060a08688031215610f8357610f82610a3f565b5b6000610f9188828901610f07565b9550506020610fa288828901610f3d565b9450506040610fb388828901610f52565b9350506060610fc488828901610f52565b9250506080610fd588828901610f07565b9150509295509295909350565b6000610fed82610f1c565b9150610ff883610f1c565b925082820261100681610f1c565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561103e5761103d610c7d565b5b828205841483151761105357611052610c7d565b5b509291505056fea264697066735822122045437a21cc41f008645939e011c01382953d5321c2ab0ef23595d88cd498193e64736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aa2565b6102f8565b6040516100cc9190610ae8565b60405180910390f35b3480156100e157600080fd5b506100ea610340565b005b3480156100f857600080fd5b50610101610580565b60405161010e9190610ae8565b60405180910390f35b34801561012357600080fd5b5061012c61058d565b6040516101399190610b12565b60405180910390f35b34801561014e57600080fd5b506101576105b5565b6040516101649190610b8c565b60405180910390f35b6101756101be565b005b61017f6105df565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bd3565b610883565b6040516101b59190610b12565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108cb90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c5d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610cac565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610470576000600182815481106103eb576103ea610ce0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046890610d0f565b9150506103c8565b50600067ffffffffffffffff81111561048c5761048b610d57565b5b6040519080825280602002602001820160405280156104ba5781602001602082028036833780820191505090505b50600190805190602001906104d0929190610998565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f790610db7565b60006040518083038185875af1925050503d8060008114610534576040519150601f19603f3d011682016040523d82523d6000602084013e610539565b606091505b505090508061057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490610e18565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610664576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069e575b5050505050905060005b81518110156107725760008282815181106107105761070f610ce0565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076a90610d0f565b9150506106f2565b50600067ffffffffffffffff81111561078e5761078d610d57565b5b6040519080825280602002602001820160405280156107bc5781602001602082028036833780820191505090505b50600190805190602001906107d2929190610998565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107f990610db7565b60006040518083038185875af1925050503d8060008114610836576040519150601f19603f3d011682016040523d82523d6000602084013e61083b565b606091505b505090508061087f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087690610e18565b60405180910390fd5b5050565b60006001828154811061089957610898610ce0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108d783610907565b90506000670de0b6b3a764000085836108f09190610e38565b6108fa9190610ea9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109799190610f67565b5050509150506402540be400816109909190610fe2565b915050919050565b828054828255906000526020600020908101928215610a11579160200282015b82811115610a105782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b8565b5b509050610a1e9190610a22565b5090565b5b80821115610a3b576000816000905550600101610a23565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6f82610a44565b9050919050565b610a7f81610a64565b8114610a8a57600080fd5b50565b600081359050610a9c81610a76565b92915050565b600060208284031215610ab857610ab7610a3f565b5b6000610ac684828501610a8d565b91505092915050565b6000819050919050565b610ae281610acf565b82525050565b6000602082019050610afd6000830184610ad9565b92915050565b610b0c81610a64565b82525050565b6000602082019050610b276000830184610b03565b92915050565b6000819050919050565b6000610b52610b4d610b4884610a44565b610b2d565b610a44565b9050919050565b6000610b6482610b37565b9050919050565b6000610b7682610b59565b9050919050565b610b8681610b6b565b82525050565b6000602082019050610ba16000830184610b7d565b92915050565b610bb081610acf565b8114610bbb57600080fd5b50565b600081359050610bcd81610ba7565b92915050565b600060208284031215610be957610be8610a3f565b5b6000610bf784828501610bbe565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c47601b83610c00565b9150610c5282610c11565b602082019050919050565b60006020820190508181036000830152610c7681610c3a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb782610acf565b9150610cc283610acf565b9250828201905080821115610cda57610cd9610c7d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d1a82610acf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d4c57610d4b610c7d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610da1600083610d86565b9150610dac82610d91565b600082019050919050565b6000610dc282610d94565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e02600b83610c00565b9150610e0d82610dcc565b602082019050919050565b60006020820190508181036000830152610e3181610df5565b9050919050565b6000610e4382610acf565b9150610e4e83610acf565b9250828202610e5c81610acf565b91508282048414831517610e7357610e72610c7d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb482610acf565b9150610ebf83610acf565b925082610ecf57610ece610e7a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ef981610eda565b8114610f0457600080fd5b50565b600081519050610f1681610ef0565b92915050565b6000819050919050565b610f2f81610f1c565b8114610f3a57600080fd5b50565b600081519050610f4c81610f26565b92915050565b600081519050610f6181610ba7565b92915050565b600080600080600060a08688031215610f8357610f82610a3f565b5b6000610f9188828901610f07565b9550506020610fa288828901610f3d565b9450506040610fb388828901610f52565b9350506060610fc488828901610f52565b9250506080610fd588828901610f07565b9150509295509295909350565b6000610fed82610f1c565b9150610ff883610f1c565b925082820261100681610f1c565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561103e5761103d610c7d565b5b828205841483151761105357611052610c7d565b5b509291505056fea264697066735822122045437a21cc41f008645939e011c01382953d5321c2ab0ef23595d88cd498193e64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}